[{"C:\\Users\\Aitor\\ironhack\\clima\\src\\reportWebVitals.js":"1","C:\\Users\\Aitor\\ironhack\\clima\\src\\App.js":"2","C:\\Users\\Aitor\\ironhack\\clima\\src\\components\\Nav\\Header.js":"3","C:\\Users\\Aitor\\ironhack\\clima\\src\\components\\Form\\Formulario.js":"4","C:\\Users\\Aitor\\ironhack\\clima\\src\\components\\Results\\Data.js":"5","C:\\Users\\Aitor\\ironhack\\clima\\src\\index.js":"6","C:\\Users\\Aitor\\ironhack\\clima\\src\\middleware\\helper.js":"7","C:\\Users\\Aitor\\ironhack\\clima\\src\\components\\Results\\Daily.js":"8","C:\\Users\\Aitor\\ironhack\\clima\\src\\components\\Results\\DailyList.js":"9"},{"size":362,"mtime":1606299867276,"results":"10","hashOfConfig":"11"},{"size":1693,"mtime":1611326348360,"results":"12","hashOfConfig":"11"},{"size":403,"mtime":1611067884094,"results":"13","hashOfConfig":"11"},{"size":3244,"mtime":1611327273417,"results":"14","hashOfConfig":"11"},{"size":3156,"mtime":1611587284429,"results":"15","hashOfConfig":"11"},{"size":500,"mtime":1606299867276,"results":"16","hashOfConfig":"11"},{"size":4772,"mtime":1611666804382,"results":"17","hashOfConfig":"11"},{"size":1634,"mtime":1611837385378,"results":"18","hashOfConfig":"11"},{"size":2681,"mtime":1611834246262,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1cq81n9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"C:\\Users\\Aitor\\ironhack\\clima\\src\\reportWebVitals.js",[],["45","46"],"C:\\Users\\Aitor\\ironhack\\clima\\src\\App.js",["47","48","49","50","51"],"import React, { useState, useEffect} from 'react';\nimport { BrowserRouter as  Switch, Route, Link } from 'react-router-dom';\n\nimport Header from './components/Nav/Header';\nimport Form from './components/Form/Formulario';\nimport Data from './components/Results/Data';\nimport Daily from './components/Results/Daily';\n\n\n\nfunction App() {\n\n    const [ pickbusqueda, guardarPickbusqueda] = useState({\n      ciudad:'',\n      pais:''\n    })\n\n    const { ciudad, pais } = pickbusqueda;\n\n    const city = pickbusqueda.ciudad;\n\n    const [ mostrar, guardarMostrar ] = useState(true);\n\n    const [ consultar, guardarConsultar ] = useState(false);\n\n    const [ resultado, guardarResultado ] = useState({});\n\n  useEffect(() => {\n    const consultarApi = async() => {\n\n      if(consultar) {\n\n        const ApiKey = 'da911c5da8ac8830a326fa164a4cd030';\n        const url = `http://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${ApiKey}`; \n        const respuesta = await fetch(url);\n        const resultado = await respuesta.json();\n        \n        guardarResultado(resultado);\n\n      }\n\n    }\n    consultarApi();\n  }, [consultar])\n\n  return (\n    <div className=\"wrapper\">\n\n      <Header\n        titulo={!consultar ? \"Check The Weather\" : 'Back to Search'}\n        guardarMostrar={guardarMostrar}\n        guardarConsultar={guardarConsultar}\n      />\n\n    {mostrar ?\n      <Form \n        guardarPickbusqueda={ guardarPickbusqueda}\n        guardarConsultar={guardarConsultar}\n        guardarMostrar= {guardarMostrar}\n      />\n      :\n      <Data\n        resultado={resultado}\n        pickbusqueda= {pickbusqueda}\n        city={city}\n      />\n    }\n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Aitor\\ironhack\\clima\\src\\components\\Nav\\Header.js",[],"C:\\Users\\Aitor\\ironhack\\clima\\src\\components\\Form\\Formulario.js",["52"],"import React, { useState } from 'react';\r\nimport './Formulario.css';\r\nimport logo from '../../assets/images/logo.png'\r\n\r\nexport default function Formulario({guardarPickbusqueda, guardarConsultar, guardarMostrar}) {\r\n\r\n    const [ busqueda, guardarBusqueda ] = useState({\r\n        ciudad: '',\r\n        pais: ''\r\n    })\r\n  \r\n      const { ciudad, pais } = busqueda;\r\n\r\n    const [ error, guardarError ] = useState(false);\r\n\r\n    const handleChange = e => {\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if( ciudad.trim() === '' || pais.trim() === '') {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        guardarError(false);\r\n\r\n        guardarConsultar(true);\r\n        guardarPickbusqueda(busqueda);\r\n\r\n        guardarBusqueda({\r\n            ciudad: '',\r\n            pais: ''\r\n        })\r\n\r\n        guardarMostrar(false);\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n    <div className=\"form-background\">\r\n\r\n        <form className=\"login\"\r\n            onSubmit = {onSubmit}\r\n        >\r\n\r\n                <div className=\"form-container\">\r\n\r\n                    <div className=\"logo\">\r\n                        <img src={logo} />\r\n                    </div>\r\n\r\n                    { error ? <p className=\"danger\">'Debes de insertar ambos valores'</p> : null }\r\n\r\n                    <div className=\"log-form-group\">\r\n\r\n                        <label>País: </label>\r\n                        <select\r\n                            name='pais'\r\n                            id='pais'\r\n                            value={pais}\r\n                            onChange={handleChange}\r\n                            className='weather'\r\n                        >\r\n                            <option value=\"\">-- Seleccione un País --</option>\r\n                            <option value=\"US\">Estados Unidos</option>\r\n                            <option value=\"MX\">México</option>\r\n                            <option value=\"AR\">Argentina</option>\r\n                            <option value=\"CO\">Colombia</option>\r\n                            <option value=\"CR\">Costa Rica</option>\r\n                            <option value=\"ES\">España</option>\r\n                            <option value=\"PE\">Perú</option>\r\n                        </select>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"log-form-group\">\r\n\r\n                    <label>Ciudad: </label>\r\n                    <input \r\n                        type=\"text\"\r\n                        placeholder=\"ciudad\"\r\n                        className='weather'\r\n                        name='ciudad'\r\n                        id='ciudad'\r\n                        value= {ciudad}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"log-form-group\">\r\n\r\n                    <input \r\n                        type='submit'\r\n                        value='Buscar'\r\n                        className='login-button'\r\n                    />\r\n                    </div>\r\n\r\n                </div>\r\n            \r\n        </form>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\Aitor\\ironhack\\clima\\src\\components\\Results\\Data.js",["53","54","55","56","57","58","59"],"import React from 'react';\r\nimport './Data.css';\r\nimport { theWeather, theSkyColor, theFontColor, pickbusqueda, theMonthDay, theWeekDay } from '../../middleware/helper';\r\n\r\nimport Daily from './Daily'\r\n\r\n\r\n\r\n\r\nexport default function Data({resultado, city}) {\r\n\r\n    //clouds, coord, main, sys, name, dt, weather, wind \r\n\r\n\r\n    const { name, main, coord, weather, wind, sys, dt } = resultado;\r\n\r\n    console.log(resultado)\r\n\r\n    \r\n    if(!main) return null\r\n    \r\n    // Calcular la temperatura Kelvin a Celsius\r\n    const temp = parseInt((main.temp) - 273.15);\r\n    const tempMax = parseInt((main.temp_max) - 273.15);\r\n    const tempMin = parseInt((main.temp_min) - 273.15);\r\n\r\n    const climaIcon = theWeather(weather);\r\n\r\n    const skyColor =  theSkyColor(weather)\r\n\r\n    const fontColor = theFontColor()\r\n\r\n\r\n    // Capital Letter for weather.description\r\n    const weatherDescription = weather[0].description;\r\n\r\n    const capital = weatherDescription[0].toUpperCase() + weatherDescription.slice(1);\r\n\r\n\r\n    // Converting dt to time  (formattedTime)\r\n\r\n    let unix_timestamp = dt;\r\n    \r\n    var date = new Date(unix_timestamp * 1000);\r\n\r\n    var hours = date.getHours();\r\n\r\n    var minutes = \"0\" + date.getMinutes();\r\n\r\n    var seconds = \"0\" + date.getSeconds();\r\n\r\n    var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\r\n\r\n    const theTime = formattedTime;\r\n\r\n\r\n    // Obtener día de la semana\r\n\r\n    const weekDay = theWeekDay();\r\n\r\n    const weekDayCapital = weekDay[0].toUpperCase() + weekDay.slice(1);\r\n\r\n\r\n\r\n    // Obtener día del mes\r\n\r\n    const monthDay = theMonthDay()\r\n\r\n \r\n    \r\n\r\n\r\n\r\n\r\n\r\n    \r\n    return (\r\n        <div className=\"data-wrapper\" style={{background: `${skyColor}`, color: `${fontColor}`}}>\r\n            \r\n            <div className=\"data-container\">\r\n\r\n\r\n                    <div className=\"name\">{name}</div>\r\n                    <div className=\"temp-med\">{temp}º</div>\r\n\r\n                   \r\n                    \r\n                    <div className=\"weather-main\">\r\n                        <img className=\"weather-main\" src={`images/icons/${climaIcon}`}/>\r\n                    </div>\r\n\r\n                    <div className=\"description\">\r\n                        <div className=\"main\">\r\n                            {weather[0].main} |\r\n                        </div>\r\n                        <div className=\"des\">\r\n                            {capital}\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                    <div className=\"average-container\">\r\n\r\n                        <div className=\"dayof\">Hoy {weekDayCapital}</div>\r\n\r\n                        <div className=\"max-min-container\">\r\n\r\n                           <div className=\"min\">{tempMin}º</div>  <div className=\"max\">{tempMax}º</div>\r\n                           \r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n\r\n\r\n            \r\n            <Daily \r\n                city= {city}\r\n                resultado={resultado}\r\n                weekDayCapital={ weekDayCapital}\r\n            />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Aitor\\ironhack\\clima\\src\\index.js",[],"C:\\Users\\Aitor\\ironhack\\clima\\src\\middleware\\helper.js",["60"],"\r\n// Find is day or night\r\n\r\nfunction isDay() {\r\n    return (Date.now() + 60000 * new Date().getTimezoneOffset() + 21600000) % 86400000 / 3600000 > 12;\r\n}\r\n\r\n\r\n// Weather Icon\r\n\r\nexport const theWeather = (weather) => {\r\n    \r\n    const clima = weather[0].main;\r\n\r\n    let wIcon\r\n\r\n    if (clima === 'Clear' && isDay) {\r\n        wIcon = '01d.png'\r\n    } if  (clima === 'Clear' && isDay === false) {\r\n        wIcon = '01n.png'\r\n    } if (clima === 'Clouds' && isDay) {\r\n        wIcon = '02d.png'\r\n    } if  (clima === 'Clouds' && isDay === false) {\r\n        wIcon = '02n.png'\r\n    } if (clima === 'Scattered Clouds' && isDay) {\r\n        wIcon = '03d.png'\r\n    } if  (clima === 'Scattered Clouds' && isDay === false) {\r\n        wIcon = '03n.png'\r\n    } if (clima === 'Broken Clouds' && isDay) {\r\n        wIcon = '04d.png'\r\n    } if  (clima === 'Broken Clouds' && isDay === false) {\r\n        wIcon = '04n.png'\r\n    } if (clima === 'Drizzle' && isDay) {\r\n        wIcon = '09d.png'\r\n    } if  (clima === 'Drizzle' && isDay === false) {\r\n        wIcon = '09n.png'\r\n    } if (clima === 'Rain' && isDay) {\r\n        wIcon = '10d.png'\r\n    } if  (clima === 'Rain' && isDay === false) {\r\n        wIcon = '10n.png'\r\n    } if (clima === 'Thunderstorm' && isDay) {\r\n        wIcon = '11d.png'\r\n    } if  (clima === 'Thunderstorm' && isDay === false) {\r\n        wIcon = '11n.png'\r\n    } if (clima === 'Snow' && isDay) {\r\n        wIcon = '13d.png'\r\n    } if  (clima === 'Snow' && isDay === false) {\r\n        wIcon = '13n.png'\r\n    } if (clima === 'Mist' && isDay) {\r\n        wIcon = '50d.png'\r\n    } if  (clima === 'Mist' && isDay === false) {\r\n        wIcon = '50n.png'\r\n    }  if (clima === 'Fog' && isDay) {\r\n        wIcon = '50d.png'\r\n    } if  (clima === 'Fog' && isDay === false) {\r\n        wIcon = '50n.png'\r\n    }\r\n\r\n    return wIcon;\r\n\r\n}\r\n\r\n// Background color\r\n\r\nexport const theSkyColor = (weather) => {\r\n    \r\n    const clima = weather[0].main;\r\n\r\n    let sColor\r\n\r\n    if (clima === 'Clear' && isDay) {\r\n        sColor = '#9fddff'\r\n    } if  (clima === 'Clear' && isDay === false) {\r\n        sColor = '#00283e'\r\n    } if (clima === 'Clouds' && isDay) {\r\n        sColor = '#e6ecf1'\r\n    } if  (clima === 'Clouds' && isDay === false) {\r\n        sColor = '#56585a'\r\n    } if (clima === 'Scattered Clouds' && isDay) {\r\n        sColor = '#4a535d'\r\n    } if  (clima === 'Scattered Clouds' && isDay === false) {\r\n        sColor = '#bddaea'\r\n    } if (clima === 'Broken Clouds' && isDay) {\r\n        sColor = '#4a535d'\r\n    } if  (clima === 'Broken Clouds' && isDay === false) {\r\n        sColor = '#bddaea'\r\n    } if (clima === 'Drizzle' && isDay) {\r\n        sColor = '#7aacc7'\r\n    } if  (clima === 'Drizzle' && isDay === false) {\r\n        sColor = '#1f2c33'\r\n    } if (clima === 'Rain' && isDay) {\r\n        sColor = '#42738c'\r\n    } if  (clima === 'Rain' && isDay === false) {\r\n        sColor = '#15252d'\r\n    } if (clima === 'Thunderstorm' && isDay) {\r\n        sColor = '#286280'\r\n    } if  (clima === 'Thunderstorm' && isDay === false) {\r\n        sColor = '#153546'\r\n    } if (clima === 'Snow' && isDay) {\r\n        sColor = '#abbac1'\r\n    } if  (clima === 'Snow' && isDay === false) {\r\n        sColor = '#373b3e'\r\n    } if (clima === 'Mist' && isDay) {\r\n        sColor = '#97a5ab'\r\n    } if  (clima === 'Mist' && isDay === false) {\r\n        sColor = '#242829'\r\n    }\r\n\r\n    return sColor;\r\n\r\n}\r\n\r\n\r\n// Font color\r\n\r\nexport const theFontColor = () => {\r\n\r\n    let fColor;\r\n\r\n    return isDay ? fColor='#000' : fColor='#fff';\r\n}\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    // Obtener fecha del mes  (dateString)\r\n\r\n    export const theMonthDay = () => {\r\n\r\n    const currentDate = new Date();\r\n\r\n    const currentDayOfMonth = currentDate.getDate();\r\n    const currentMonth = currentDate.getMonth(); // Be careful! January is 0, not 1\r\n    const currentYear = currentDate.getFullYear();\r\n\r\n    const dateString = currentYear + \"-\" + (currentMonth + 1) + \"-\" +  currentDayOfMonth;\r\n\r\n    return dateString;\r\n\r\n    }\r\n\r\n\r\n    // Obtener día de la semana  (nombreDia)\r\n\r\n    \r\n    export const theWeekDay = () => {\r\n\r\n    const currentDate = new Date();\r\n\r\n    const currentDayOfMonth = currentDate.getDate();\r\n    const currentMonth = currentDate.getMonth(); // Be careful! January is 0, not 1\r\n    const currentYear = currentDate.getFullYear();\r\n    const dateString = currentYear + \"-\" + (currentMonth + 1) + \"-\" +  currentDayOfMonth;\r\n\r\n    const fechaComoCadena = dateString; // día lunes\r\n    const dias = [\r\n    'domingo',\r\n    'lunes',\r\n    'martes',\r\n    'miércoles',\r\n    'jueves',\r\n    'viernes',\r\n    'sábado',\r\n    'domingo',\r\n    ];\r\n    const numeroDia = new Date(fechaComoCadena).getDay();\r\n    const nombreDia = dias[numeroDia];\r\n\r\n    return nombreDia; \r\n    \r\n}\r\n\r\n\r\n\r\n   \r\n\r\n\r\n      \r\n",["61","62"],"C:\\Users\\Aitor\\ironhack\\clima\\src\\components\\Results\\Daily.js",[],"C:\\Users\\Aitor\\ironhack\\clima\\src\\components\\Results\\DailyList.js",["63","64","65","66","67","68","69","70","71"],"import React, { Fragment } from 'react'\r\nimport { theWeather, theSkyColor, theFontColor, pickbusqueda, theWeekDay } from '../../middleware/helper';\r\n\r\nimport './DailyList.css';\r\n\r\n\r\nexport default function DailyList(listi, city  ) {\r\n\r\n    const {name, main, coord, weather, wind, sys, dt_txt } = listi.listi;\r\n   \r\n\r\n    if(!main) return null\r\n    \r\n    // Calcular la temperatura Kelvin a Celsius\r\n    const temp = parseInt((main.temp) - 273.15);\r\n\r\n    const climaIcon = theWeather(weather);\r\n\r\n    const skyColor =  theSkyColor(weather)\r\n\r\n    const fontColor = theFontColor()\r\n\r\n\r\n    // Capital Letter for weather.description\r\n    const weatherDescription = weather[0].description;\r\n\r\n    const capital = weatherDescription[0].toUpperCase() + weatherDescription.slice(1);\r\n\r\n\r\n    \r\n    // Obtener día de la semana\r\n\r\n    const weekDay =theWeekDay();\r\n\r\n    const weekDayCapital = weekDay[0].toUpperCase() + weekDay.slice(1);\r\n\r\n\r\n    // Date\r\n\r\n    const date = dt_txt.slice(0, 10);\r\n\r\n    \r\n\r\n\r\n    var dia = date.slice(8, 11);\r\n    var mes = date.slice(5, 7);\r\n    var anio = date.slice(0, 4);\r\n\r\n    var timeDay = dt_txt.slice(11, 16)\r\n\r\n    // Obtengo hora entera '12:00:00'\r\n    var timeDayFull = dt_txt.slice(11, 19)\r\n\r\n    var dias=[\"mie\", \"jue\", \"vie\", \"sab\", \"dom\", \"lun\", \"mar\", \"mie\"];\r\n    var dt = new Date(mes+' '+dia+', '+anio);\r\n\r\n    // Obtengo el día de la seman (lunes, martes, miercoles,...)\r\n    const dayOfWeek = dias[dt.getUTCDay()-1];\r\n\r\n\r\n\r\n    return (\r\n\r\n             \r\n            \r\n                <div className=\"data-single-wrapper\" style={{background: `${skyColor}`, color: `${fontColor}`, width:192}}>\r\n\r\n                    <div className=\"temp-med-single\">{temp}º</div>\r\n                    <div className=\"name-day\">{dayOfWeek} | {dia}</div>\r\n                    <div className=\"time-day\">{timeDay}</div>\r\n                            \r\n                    <div className=\"weather-main\">\r\n                        <img className=\"weather-main\" src={`images/icons/${climaIcon}`}/>\r\n                    </div>\r\n                    \r\n                    <div className=\"main-single\">\r\n                        {weather[0].main}\r\n                    </div>\r\n\r\n                    <div className=\"des-single\">\r\n                        {capital}\r\n                    </div>\r\n\r\n                    <div className=\"wind-container\">\r\n                        <img src='images/wind.png' />\r\n                            <div className=\"windy\">\r\n                                {wind.speed}\r\n                            </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n       \r\n                \r\n      \r\n            \r\n\r\n\r\n\r\n    )\r\n}\r\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":2,"column":28,"nodeType":"78","messageId":"79","endLine":2,"endColumn":34},{"ruleId":"76","severity":1,"message":"80","line":2,"column":36,"nodeType":"78","messageId":"79","endLine":2,"endColumn":41},{"ruleId":"76","severity":1,"message":"81","line":2,"column":43,"nodeType":"78","messageId":"79","endLine":2,"endColumn":47},{"ruleId":"76","severity":1,"message":"82","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":44,"column":6,"nodeType":"85","endLine":44,"endColumn":17,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":57,"column":25,"nodeType":"89","endLine":57,"endColumn":43},{"ruleId":"76","severity":1,"message":"90","line":3,"column":49,"nodeType":"78","messageId":"79","endLine":3,"endColumn":61},{"ruleId":"76","severity":1,"message":"91","line":15,"column":25,"nodeType":"78","messageId":"79","endLine":15,"endColumn":30},{"ruleId":"76","severity":1,"message":"92","line":15,"column":41,"nodeType":"78","messageId":"79","endLine":15,"endColumn":45},{"ruleId":"76","severity":1,"message":"93","line":15,"column":47,"nodeType":"78","messageId":"79","endLine":15,"endColumn":50},{"ruleId":"76","severity":1,"message":"94","line":54,"column":11,"nodeType":"78","messageId":"79","endLine":54,"endColumn":18},{"ruleId":"76","severity":1,"message":"95","line":67,"column":11,"nodeType":"78","messageId":"79","endLine":67,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":89,"column":25,"nodeType":"89","endLine":89,"endColumn":90},{"ruleId":"76","severity":1,"message":"96","line":120,"column":36,"nodeType":"78","messageId":"79","endLine":120,"endColumn":42},{"ruleId":"72","replacedBy":"97"},{"ruleId":"74","replacedBy":"98"},{"ruleId":"76","severity":1,"message":"99","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"90","line":2,"column":49,"nodeType":"78","messageId":"79","endLine":2,"endColumn":61},{"ruleId":"76","severity":1,"message":"100","line":9,"column":12,"nodeType":"78","messageId":"79","endLine":9,"endColumn":16},{"ruleId":"76","severity":1,"message":"91","line":9,"column":24,"nodeType":"78","messageId":"79","endLine":9,"endColumn":29},{"ruleId":"76","severity":1,"message":"93","line":9,"column":46,"nodeType":"78","messageId":"79","endLine":9,"endColumn":49},{"ruleId":"76","severity":1,"message":"101","line":35,"column":11,"nodeType":"78","messageId":"79","endLine":35,"endColumn":25},{"ruleId":"76","severity":1,"message":"102","line":52,"column":9,"nodeType":"78","messageId":"79","endLine":52,"endColumn":20},{"ruleId":"87","severity":1,"message":"88","line":73,"column":25,"nodeType":"89","endLine":73,"endColumn":90},{"ruleId":"87","severity":1,"message":"88","line":85,"column":25,"nodeType":"89","endLine":85,"endColumn":54},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'Daily' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ciudad' and 'pais'. Either include them or remove the dependency array.","ArrayExpression",["105"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'pickbusqueda' is defined but never used.","'coord' is assigned a value but never used.","'wind' is assigned a value but never used.","'sys' is assigned a value but never used.","'theTime' is assigned a value but never used.","'monthDay' is assigned a value but never used.","'fColor' is assigned a value but never used.",["103"],["104"],"'Fragment' is defined but never used.","'name' is assigned a value but never used.","'weekDayCapital' is assigned a value but never used.","'timeDayFull' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [ciudad, consultar, pais]",{"range":"108","text":"109"},[1125,1136],"[ciudad, consultar, pais]"]